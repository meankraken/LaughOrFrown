@model LaughOrFrown.ViewModels.PagedJokesViewModel

@{
    Layout = "_Layout";
}

@section styles {
    <link rel="stylesheet" href="~/styles/jokes.css" />
}

<div id="jokesView">
    @foreach (var Joke in Model.Jokes)
    {
        <a asp-action="Joke" asp-route-id=@Joke.Id asp-route-returnurl="@Context.Request.Path">
            <div class="jokeBox">
                <h3>@Joke.JokeText</h3>
                @if (ViewBag.Title == "Offensive Jokes")
                {
                    <h5>Offensive rating: <span class="ratingText">@(Joke.OffensiveAverageRating >= 0 ? Joke.OffensiveAverageRating.ToString() : "Not rated")</span></h5>
                }
                else if (ViewBag.Title == "Top Jokes")
                {
                    <h5>Hot rating: <span class="ratingText">@(Joke.HotAverageRating >= 0 ? Joke.HotAverageRating.ToString() : "Not rated")</span></h5>
                }
                else
                {
                    <h5>Date uploaded: <span class="ratingText">@Joke.DateCreated</span></h5>
                }
            </div>
        </a>

    }


</div>

<div class="navFooter">
    <a href="@generateUrl("back")" class="@generateClass("back")">
        <i class="glyphicon glyphicon-menu-left" id="leftArrow"></i>
        <p class="leftText">
            @if (ViewBag.Title == "New Jokes")
            {
                <text>Fresh Jokes</text>
            }
            else
            {
                <text>Funnier Jokes</text>

            }

        </p>
    </a>
    <a href="@generateUrl("forward")" class="@generateClass("forward")">
        <i class="glyphicon glyphicon-menu-right" id="rightArrow"></i>
        <p class="rightText">
            @if (ViewBag.Title == "New Jokes")
            {
                <text>A Bit Stale</text>
            }
            else
            {
                <text>Questionable Content</text>

            }
        </p>
    </a>
</div>





@section scripts {
    <script src="~/scripts/jokesScript.js"></script>
}


@functions {
    private string generateUrl(string direction)
    {
        if (direction == "back")
        {
            return Context.Request.Path + "?page=" + (Model.currentPage - 1);
        }
        else
        {
            return Context.Request.Path + "?page=" + (Model.currentPage + 1);
        }
    }

    private string generateClass(string direction)
    {
        if (direction == "back")
        {
            if (Model.hasPreviousPage)
            {
                return "";
            }
            else
            {
                return "greyed";
            }
        }
        else
        {
            if (Model.hasNextPage)
            {
                return "";
            }
            else
            {
                return "greyed";

            }
        }
    }

}




